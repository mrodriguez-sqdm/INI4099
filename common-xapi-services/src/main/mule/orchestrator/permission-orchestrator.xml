<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<sub-flow name="permission-orchestratorSub_Flow" doc:id="a0fdfa6b-ddce-4ac4-b90a-604e7eb05f4e" >
		<set-variable value="#[attributes.queryParams]" doc:name="Save Parameters" doc:id="028985b0-0ed6-4611-9ddc-dced532a1f52" variableName="parameters" />
		<set-variable value="#[attributes.headers]" doc:name="Save headers" doc:id="05fbc852-aa59-4384-b8f5-c87054e701a6" variableName="headers" />
		<ee:transform doc:name="build Payload BOT" doc:id="96caef98-c2ad-4e5b-ac9f-c4d1e2ecd583" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
  "WSRequestHeader": {
    "System": {
      "name": vars.headers.name,
      "correlationID": vars.headers."X-CORRELATION-ID",
      "processingServer": ""
    },
    "Property": []
  },
"WSRequestBody": {
   "Mail": payload.credentials.username,
    "Password": payload.credentials.password,
    "Audit": {
      "Canal": vars.headers.name
    }
  }
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<flow-ref doc:name="Flow Reference" doc:id="7380e8a0-0b7f-4f07-a20a-949ae40b81fa" name="pqr-mietb-authmail-bot-sapi-clientSub_Flow"/>
		<set-variable value='#[if(payload.WSResponseHeader.Service.status == "FAIL" and payload.WSResponseHeader.Service.statusDetail[0].errorCode == "BOTERROR")&#10; 500&#10;else&#10; 200]' doc:name="Set Variable" doc:id="d8f95c6f-be39-49cd-900f-4b62893e38e4" variableName="httpStatus" />
		<ee:transform doc:name="Transform Message" doc:id="9be3c484-2a26-4ea9-822a-9852d47b4e66" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
    codeResponse: vars.httpStatus as String,
    messageResponse: payload.WSResponseHeader.Service.statusDetail[0].errorMessage,
    authentication: { 
      detail_authentication: 
       if(payload.WSResponseBody.Name != null)
        { 
        	name: payload.WSResponseBody.Name,
        	userIdentificacionNumber: payload.WSResponseBody.User_Identificacion_Number,
        	userIdentificationType:  payload.WSResponseBody.userIdentificationType,
        	services:
              if(payload.WSResponseBody.Services != null)
                (payload.WSResponseBody.Services) map (service)  -> {
                    lineType: service.Line_Type,
                    phone: service.Phone,
                    subType: service.Sub_Type,
                    state: service.State,
                    technology: service.Technology
                }
               else 
                []
        	
        }
       else
        {}
      
    }
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
</mule>

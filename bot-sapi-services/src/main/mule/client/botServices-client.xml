<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core">
	<sub-flow name="auth-botServices-clientSub_Flow" doc:id="45f16508-ec4e-4c79-be7b-a288626d6bbc" >
		<async doc:name="Async" doc:id="2906f081-b443-4f3b-a117-4567979fa0ea">
				<flow-ref doc:name="Call Logger" doc:id="bb1e881c-7d46-4bca-9e84-140b66e2a9dd" name="loggin-client-call" />
			</async>
		<http:request method="POST" doc:name="Call Authenticate" doc:id="e4dbc5bf-f65c-45ef-b68b-2a6ae4e0086c" config-ref="HTTP_Request_configuration_botServices" path="${botServices.authenticate.path}" responseTimeout="#[p('botServices.responseTimeout')]"/>
		<async doc:name="Async" doc:id="28135f21-1f14-45b7-bf76-168f5528d28a">
				<flow-ref doc:name="Call Logger" doc:id="3b93acf8-90af-448b-a510-a23b42b2dbf5" name="loggin-client-call" />
			</async>
	</sub-flow>
	<sub-flow name="generateUrl-botServices-clientSub_Flow" doc:id="98db2cac-6572-4b45-af98-a51ada2d6b04" >
		<async doc:name="Async" doc:id="3c2b97d5-9d15-446b-a360-09f8f3a36afa">
				<flow-ref doc:name="Call Logger" doc:id="7ac103e8-5ad1-432c-9f1e-9ce3b4a4b353" name="loggin-client-call" />
			</async>
		<http:request method="POST" doc:name="Call generate URL" doc:id="03d46a2d-b03f-4735-8cb8-df6a12daa07f" config-ref="HTTP_Request_configuration_botServices" path="${botServices.generateRegisterURL.path}" responseTimeout="#[p('botServices.responseTimeout')]">
			<http:headers ><![CDATA[#[output application/java
---
{
	"Authorization" : "Bearer " ++ vars.generatedToken.WSResponseBody.SecurityToken
}]]]></http:headers>
		</http:request>
		<async doc:name="Async" doc:id="81e998c3-5927-4d41-8c1a-c02b00fe017b">
				<flow-ref doc:name="Call Logger" doc:id="49e18e92-0d09-4960-a723-79d223d72dce" name="loggin-client-call" />
			</async>
	</sub-flow>
	<sub-flow name="saleOrderGetEncripted-botServices-clientSub_Flow" doc:id="4f86c723-b76f-4a17-af67-a7f73fad989f" >
		<async doc:name="Async" doc:id="094b839b-b096-48ad-98a1-474f1e910c6a">
				<flow-ref doc:name="Call Logger" doc:id="12f7fd31-5a6b-4f6f-af81-91c7d21d27b2" name="loggin-client-call" />
			</async>
		<set-variable value='#[%dw 2.0&#10;output text/plain&#10;var processName = vars.headers.processname&#10;---&#10;if(processName == "getSaleOrderCustomer")&#10;	p("botServices.saleOrderGetCustomer.path")&#10;else if(processName == "getSaleOrderCatalog")&#10;	p("botServices.saleOrderGetCatalog.path")&#10;else if(processName == "validateSaleOrderCatalog")&#10;	p("botServices.saleOrderValidateCatalog.path")&#10;else if(processName == "getSaleOrderPending")&#10;	p("botServices.saleOrderGetPending.path")&#10;else if(processName == "execSaleOrderInit")&#10;	p("botServices.saleOrderOpInit.path")&#10;else if(processName == "execSaleOrderCreate")&#10;	p("botServices.saleOrderOpCreate.path")&#10;else if(processName == "execSaleOrderValidation")&#10;	p("botServices.saleOrderOpValidation.path")&#10;else if(processName == "execSaleOrderQuestionnaire")&#10;	p("botServices.saleOrderOpQuestionnaire.path")&#10;else if(processName == "execSaleOrderOtp")&#10;	p("botServices.saleOrderOpOtp.path")&#10;else if(processName == "execSaleOrderCancel")&#10;	p("botServices.saleOrderOpCancel.path")&#10;else if(processName == "execSaleOrderUpdate")&#10;	p("botServices.saleOrderOpUpdate.path")&#10;else if(processName == "getSaleOrder")&#10;	p("botServices.saleOrderGet.path")&#10;else if(processName == "execSaleOrderBooking")&#10;	p("botServices.saleOrderOpBooking.path")&#10;else if(processName == "validateSaleOrderCatalogFilter")&#10;	p("botServices.saleOrderFilterCatalog.path")&#10;else if(processName == "postSalesOrderSimcards")&#10;	p("botServices.saleOrderSimcards.path")&#10;else if(processName == "postSalesOrderpayments")&#10;	p("botServices.saleOrderPayments.path")	&#10;else if(processName == "postPortabilitiesOperationRequest" or processName == "postPortabilitiesOperationValidation")&#10;	p("botServices.saleOrderPortabilitiesOperation.path")	&#10;else&#10;	p("botServices.saleOrderGetCustomer.path")]' doc:name="Set endpoint bot encrypetd" doc:id="02cf38cd-2bc4-4c55-9e27-323bdc1d9842" variableName="endpoint_encrypted"/>
		<http:request method="POST" doc:name="Call get Customer" doc:id="89953936-e2c6-4796-9882-b5b5226c3e25" config-ref="HTTP_Request_configuration_botServices" responseTimeout="#[p('botServices.responseTimeout')]" path='#[vars.endpoint_encrypted]'>
			<http:body ><![CDATA[#[vars.initialPayload]]]></http:body>
			<http:headers ><![CDATA[#[output application/java
---
{
	"x_civ_request" : vars.headers."x_civ_request",
	"Authorization" : "Bearer " ++ vars.generatedToken.WSResponseBody.SecurityToken
}]]]></http:headers>
		</http:request>
		<set-variable value="#[vars.outboundHeaders default {} ++ { 'x_civ_response': attributes.headers[&quot;x_civ_response&quot;]}]" doc:name="Set x_civ_response" doc:id="19e7b1e4-f81c-41a3-a5a9-2e6c1f5c063a" variableName="outboundHeaders"/>
		<async doc:name="Async" doc:id="0e71272b-df92-40ec-857f-466c9a04c0a6">
				<flow-ref doc:name="Call Logger" doc:id="3f37135f-bf1e-4905-b425-49605e20e7ec" name="loggin-client-call" />
			</async>
	</sub-flow>
</mule>
